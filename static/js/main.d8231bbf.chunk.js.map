{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.jsx","components/rSuite/Drower.jsx","components/results/index.js","app.js","index.js"],"names":["Header","index","Form","dispatcher","selectedUrl","isActive","id","elementId","React","useState","method","setMethod","url","setUrl","useEffect","console","log","onSubmit","e","preventDefault","formData","target","value","body","myTextArea","JSON","parse","type","payload","className","name","required","onChange","onClick","tagName","Button","color","appearance","rows","cols","getColor","MyDrawer","dataFromLocalSt","getUrlDispatcher","open","setOpen","Drawer","size","placement","onClose","Title","Actions","Body","map","item","Results","data","Grid","Row","Col","xs","src","theme","uniqueUrl","urlObject","localStorage","getItem","Array","find","initState","urlInLs","reducer","state","action","setItem","stringify","App","useReducer","apiData","appDispatcher","callApi","a","requestParams","axios","Fragment","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d8231bbf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.scss\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>RESTy Over Flow</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./footer.scss\";\n\nexport default function index() {\n  return <footer>&copy; 2018</footer>;\n}\n","import React, { useEffect } from \"react\";\nimport { Button } from \"rsuite\";\n\nimport \"./form.scss\";\n\nfunction Form({ dispatcher, selectedUrl }) {\n  const isActive = (id, elementId) => (id === elementId ? \"active\" : \"\");\n  const [method, setMethod] = React.useState(\"get\");\n  const [url, setUrl] = React.useState(selectedUrl);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      method,\n      url: e.target.url.value,\n      body: e.target.myTextArea.value\n        ? JSON.parse(e.target.myTextArea.value)\n        : {},\n    };\n    dispatcher({ type: \"updateRequest\", payload: formData });\n  };\n  React.useEffect(() => {\n    setUrl(selectedUrl.url);\n  }, [selectedUrl]);\n  console.log(selectedUrl.url);\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className=\"url\">\n        <div>URL: </div>\n        <input\n          name=\"url\"\n          type=\"text\"\n          required\n          onChange={(e) => setUrl(e.target.value)}\n          value={url}\n        />\n        <button data-testid=\"url\" type=\"submit\">\n          GO!\n        </button>\n      </label>\n      <label\n        className=\"methods methodsContainer\"\n        onClick={(e) => {\n          if (e.target.tagName === \"SPAN\") {\n            setMethod(e.target.id);\n          }\n        }}\n      >\n        <Button color=\"orange\" appearance=\"primary\">\n          Orange\n        </Button>\n        <Button\n          color=\"orange\"\n          appearance=\"primary\"\n          className={isActive(method, \"get\")}\n          id=\"get\"\n        >\n          GET\n        </Button>\n        <Button\n          color=\"orange\"\n          appearance=\"primary\"\n          className={isActive(method, \"post\")}\n          id=\"post\"\n        >\n          POST\n        </Button>\n        <Button\n          color=\"orange\"\n          appearance=\"primary\"\n          className={isActive(method, \"put\")}\n          id=\"put\"\n        >\n          PUT\n        </Button>\n        <Button\n          color=\"orange\"\n          appearance=\"primary\"\n          className={isActive(method, \"delete\")}\n          id=\"delete\"\n        >\n          DELETE\n        </Button>\n      </label>\n      <textarea id=\"textarea\" name=\"myTextArea\" rows=\"4\" cols=\"50\" />\n    </form>\n  );\n}\n\nexport default Form;\n","import { Drawer } from \"rsuite\";\nimport React from \"react\";\nimport Button from \"rsuite/Button\";\nimport \"rsuite/dist/rsuite.min.css\";\n\nconst getColor = (method) => {\n  switch (method) {\n    case \"get\":\n      return \"green\";\n    case \"post\":\n      return \"blue\";\n    case \"put\":\n      return \"orange\";\n    case \"delete\":\n      return \"red\";\n    default:\n      return \"violet\";\n  }\n};\nconst MyDrawer = ({ dataFromLocalSt, getUrlDispatcher }) => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const renderUrls = () =>\n    dataFromLocalSt.map((item, index) => {\n      return (\n        <div key={index}>\n          <Button\n            color={getColor(item.method)}\n            appearance=\"primary\"\n            onClick={() => {\n              getUrlDispatcher({ type: \"updateSelectedUrl\", payload: item });\n              setOpen(false);\n            }}\n          >\n            {item.url}\n          </Button>\n        </div>\n      );\n    });\n  return (\n    <>\n      <Button color=\"orange\" onClick={() => handleOpen()} appearance=\"primary\">\n        History\n      </Button>\n      <Drawer\n        size={\"md\"}\n        placement={\"bottom\"}\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Drawer.Header>\n          <Drawer.Title></Drawer.Title>\n          <Drawer.Actions>\n            <Button onClick={() => setOpen(false)}>Cancel</Button>\n            <Button onClick={() => setOpen(false)} appearance=\"primary\">\n              Confirm\n            </Button>\n          </Drawer.Actions>\n        </Drawer.Header>\n        <Drawer.Body>{renderUrls()}</Drawer.Body>\n      </Drawer>\n    </>\n  );\n};\nexport default MyDrawer;\n","import React from \"react\";\nimport \"./result.scss\";\nimport ReactJson from \"react-json-view\";\nimport MyDrawer from \"../rSuite/Drower\";\n// use the component in your app!\nimport { Grid, Row, Col } from \"rsuite\";\nfunction Results({ data, dataFromLocalSt, getUrlDispatcher }) {\n  return (\n    <Grid>\n      <Row className=\"show-grid\">\n        <Col xs={12}>\n          {dataFromLocalSt ? (\n            <MyDrawer\n              dataFromLocalSt={dataFromLocalSt}\n              getUrlDispatcher={getUrlDispatcher}\n            />\n          ) : null}\n        </Col>\n        <Col xs={12}>\n          <ReactJson src={data} theme=\"monokai\" />\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n\nexport default Results;\n// {/* <code>{data ? JSON.stringify(data, undefined, 2) : null}</code> */}\n// {/* {data ? MakeJsonPretty(JSON.stringify(data)) : null} */}\n// {/* <JSONPretty json={data} /> */}\n","import React from \"react\";\n\nimport \"./app.scss\";\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Form from \"./components/form\";\nimport Results from \"./components/results\";\nimport axios from \"axios\";\nconst uniqueUrl = (url) => {\n  const urlObject = JSON.parse(localStorage.getItem(\"urls\") || \"{}\");\n  if (urlObject instanceof Array)\n    return !urlObject.find((item) => item.url === url);\n  else return true;\n};\n\nconst initState = {\n  method: \"get\",\n  url: \"\",\n  body: {},\n  data: null,\n  urlInLs: JSON.parse(localStorage.getItem(\"urls\")),\n  selectedUrl: \"\",\n};\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"updateApi\":\n      return { ...state, data: action.payload };\n    case \"updateRequest\": {\n      if (uniqueUrl(action.payload.url))\n        localStorage.setItem(\n          \"urls\",\n          JSON.stringify([\n            ...(JSON.parse(localStorage.getItem(\"urls\")) || []),\n            action.payload,\n          ])\n        );\n      return {\n        ...state,\n        method: action.payload.method,\n        body: action.payload.body,\n        url: action.payload.url,\n        urlInLs: JSON.parse(localStorage.getItem(\"urls\")),\n      };\n    }\n    case \"updateSelectedUrl\":\n      return { ...state, selectedUrl: action.payload };\n    default:\n      return state;\n  }\n};\nfunction App() {\n  const [\n    { urlInLs, url, method, body, data: apiData, selectedUrl },\n    appDispatcher,\n  ] = React.useReducer(reducer, initState);\n\n  const callApi = async (requestParams = null) => {\n    try {\n      if (requestParams.url === \"\") return;\n      const data = await axios[requestParams.method](requestParams.url, body);\n      appDispatcher({ type: \"updateApi\", payload: data });\n    } catch (error) {\n      appDispatcher({ type: \"updateApi\", payload: error });\n    }\n  };\n  React.useEffect(() => {\n    (async () => {\n      await callApi({ url, method, body });\n    })();\n  }, [url, method, body]);\n  return (\n    <React.Fragment>\n      <Header />\n      <div data-testid=\"method\">Request Method: {method}</div>\n      <div>URL: {url}</div>\n      <Form dispatcher={appDispatcher} selectedUrl={selectedUrl} />\n      <Results\n        data={apiData}\n        dataFromLocalSt={urlInLs}\n        getUrlDispatcher={appDispatcher}\n      />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app.js\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}